# Types
scalar Date

type Todo {
  id: ID!
  title: String!
  user_id: ID!
  completed: Boolean!
  created_at: Date!
  updated_at: Date!
}

input TodoCreateInput {
  title: String!
  completed: Boolean!
  user: ID!
}

input TodoUpdateInput {
  title: String
  completed: Boolean
}

type Query {
  # Todos
  todos: [Todo]!
  todo(id: ID!): Todo
}

# extend type Todo {
#   user: User!
# }

type TodoPayload {
  success: Boolean!
  results: Int
  error: String
  data: Todo!
}

type Mutation {
  # Todos
  createTodo(todo: TodoCreateInput!): TodoPayload!
  updateTodo(todo: TodoUpdateInput!): TodoPayload!
  deleteTodo(id: ID!): TodoPayload!
}
